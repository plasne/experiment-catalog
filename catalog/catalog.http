@baseURL = http://localhost:6010/api
@project = sprint-05-24
@baseline = baseline
@experiment = pelasne_123
@set = set-000

## Get a list of projects
GET {{baseURL}}/projects HTTP/1.1

### Create a new project
POST {{baseURL}}/projects HTTP/1.1
Content-Type: application/json

{
    "name": "{{project}}"
}

### Create a baseline experiment
POST {{baseURL}}/projects/{{project}}/experiments HTTP/1.1
Content-Type: application/json

{
    "name": "{{experiment}}",
    "hypothesis": "project baseline"
}

### Mark this experiment as the baseline for the project
PATCH {{baseURL}}/projects/{{project}}/experiments/{{baseline}}/baseline HTTP/1.1

### Record one or more evaluations for baseline
POST {{baseURL}}/projects/{{project}}/experiments/{{baseline}}/results HTTP/1.1
Content-Type: application/json

{
    "ref": "q1",
    "set": "{{set}}",
    "metrics": {
        "gpt-coherance": 2,
        "gpt-relevance": 3,
        "gpt-correctness": 2
    }
}

### Create an experiment
POST {{baseURL}}/projects/project-example/experiments HTTP/1.1
Content-Type: application/json

{
    "name": "{{experiment}}",
    "hypothesis": "I believe decreasing the temperature will give better results."
}

### Mark a specific set as the baseline for the experiment
PATCH {{baseURL}}/projects/{{project}}/experiments/{{experiment}}/sets/{{set}}/baseline HTTP/1.1

### Mark the project baseline as the baseline for the experiment
PATCH {{baseURL}}/projects/{{project}}/experiments/{{experiment}}/sets/:project/baseline HTTP/1.1

### Record one or more evaluations for experiment
POST {{baseURL}}/projects/{{project}}/experiments/{{experiment}}/results HTTP/1.1
Content-Type: application/json

{
    "ref": "q1",
    "set": "{{set}}",
    "metrics": {
        "bert-accuracy": "f-",
        "bert-recall": "f-",
        "bert-precision": "f-"
    }
}

### Compare experiments
GET {{baseURL}}/projects/{{project}}/experiments/{{experiment}}/compare HTTP/1.1

### Annotate experiment
POST {{baseURL}}/projects/{{project}}/experiments/{{experiment}}/results HTTP/1.1
Content-Type: application/json

{
    "set": "{{set}}",
    "annotations": [
        {
            "text": "commit #4897f3d",
            "uri": "https://example.com"
        }
    ]
}

### Get tags from a project
GET {{baseURL}}/projects/{{project}}/tags HTTP/1.1

### Tag some refs (test)
PUT {{baseURL}}/projects/{{project}}/tags HTTP/1.1
Content-Type: application/json

{
    "name": "test",
    "refs": [407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812]
}

### Tag some refs (validation)
PUT {{baseURL}}/projects/{{project}}/tags HTTP/1.1
Content-Type: application/json

{
    "name": "multi-turn",
    "refs": [519, 568, 653, 102, 104, 115, 180, 235, 284]
}

### Get metric definitions
GET {{baseURL}}/projects/{{project}}/metrics HTTP/1.1

### Define a new metric
PUT {{baseURL}}/projects/{{project}}/metrics HTTP/1.1
Content-Type: application/json

[
    {
        "name": "intent-accuracy",
        "min": 0,
        "max": 1,
        "aggregate_function": "average",
    },
    {
        "name": "intent-recall",
        "min": 0,
        "max": 1,
        "aggregate_function": "recall",
    },
    {
        "name": "intent-precision",
        "min": 0,
        "max": 1,
        "aggregate_function": "precision",
    },
    {
        "name": "retrieval_ndcg_at_10",
        "min": 0,
        "max": 1,
        "aggregate_function": "average",
    },
    {
        "name": "retrieval_precision_at_10",
        "min": 0,
        "max": 1,
        "aggregate_function": "average",
    },
    {
        "name": "retrieval_recall_at_10",
        "min": 0,
        "max": 1,
        "aggregate_function": "average",
    },
    {
        "name": "retrieval_f1_at_10",
        "min": 0,
        "max": 1,
        "aggregate_function": "average",
    },
    {
        "name": "generation_f1",
        "min": 0,
        "max": 1,
        "aggregate_function": "average",
    },
    {
        "name": "generation_recall",
        "min": 0,
        "max": 1,
        "aggregate_function": "average",
    },
    {
        "name": "generation_precision",
        "min": 0,
        "max": 1,
        "aggregate_function": "average",
    },
    {
        "name": "generation_correctness",
        "min": 1,
        "max": 5,
        "aggregate_function": "average",
    },
    {
        "name": "generation_similarity",
        "min": 1,
        "max": 5,
        "aggregate_function": "average",
    },
    {
        "name": "generation_toxicity",
        "min": 0,
        "max": 1,
        "aggregate_function": "average",
    },
    {
        "name": "correctness",
        "min": 1,
        "max": 5,
        "aggregate_function": "average",
    },
    {
        "name": "retrieval_context_relevance_at_10",
        "min": 1,
        "max": 5,
        "aggregate_function": "average",
    },
    {
        "name": "generation_answer_relevance",
        "min": 1,
        "max": 5,
        "aggregate_function": "average",
    },
    {
        "name": "generation_groundedness",
        "min": 1,
        "max": 5,
        "aggregate_function": "average",
    },
    {
        "name": "eval_duration",
        "aggregate_function": "average",
        "tags": ["lower-is-better"],
    }
]